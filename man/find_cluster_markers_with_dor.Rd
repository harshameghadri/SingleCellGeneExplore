% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_cluster_markers_with_dor.R
\name{find_cluster_markers_with_dor}
\alias{find_cluster_markers_with_dor}
\title{Find Cluster Markers with Diagnostic Odds Ratio (DOR)}
\usage{
find_cluster_markers_with_dor(
  seurat_object,
  assay_name = "RNA",
  cluster_column = "seurat_clusters",
  logfc_threshold = 0.1,
  min_pct = 0.25,
  only_pos = TRUE,
  calculate_dor = TRUE,
  parallel = FALSE,
  num_cores = NULL,
  output_file = NULL,
  save_excel = FALSE,
  excel_file = NULL,
  assign_to_env = FALSE
)
}
\arguments{
\item{seurat_object}{A Seurat object.}

\item{assay_name}{Character string. Assay to use. Default: \code{"RNA"}.}

\item{cluster_column}{Character string. Metadata column with cluster IDs.
Default: \code{"seurat_clusters"}.}

\item{logfc_threshold}{Numeric. Log fold-change threshold for \code{FindMarkers}.
Default: \code{0.1}.}

\item{min_pct}{Numeric. Minimum fraction of cells expressing gene in either
population for \code{FindMarkers}. Default: \code{0.25}.}

\item{only_pos}{Logical. Only return positive markers (higher in cluster)?
Default: \code{TRUE}.}

\item{calculate_dor}{Logical. Calculate DOR and logDOR? Default: \code{TRUE}.}

\item{parallel}{Logical. Use parallel processing? Default: \code{FALSE}. Requires
the \code{parallel} package.}

\item{num_cores}{Optional. Numeric. Number of cores for parallel processing.
Default (if \code{parallel=TRUE} and \code{num_cores=NULL}): \code{detectCores() - 1}.}

\item{output_file}{Optional. Character string. Path to save the combined marker
table as a tab-separated file. Default: \code{NULL} (don't save TSV).}

\item{save_excel}{Logical. Save results to an Excel file with one sheet per
cluster? Default: \code{FALSE}. Requires the \code{WriteXLS} package.}

\item{excel_file}{Optional. Character string. Path for the output Excel file.
Default (if \code{save_excel=TRUE} and \code{excel_file=NULL}): \code{"cluster_markers_dor.xlsx"}
in the current directory.}

\item{assign_to_env}{Logical. Assign the final results table to \code{markers_table}
in the global environment? Default: \code{FALSE}.}
}
\value{
A data frame containing marker genes for all clusters, combined. Includes
standard \code{FindMarkers} output columns, plus \code{gene}, \code{cluster}, and optionally
\code{DOR} and \code{logDOR}. Returns an empty data frame if no markers are found.
}
\description{
Identifies marker genes for each cluster in a Seurat object using
\code{Seurat::FindMarkers}. Optionally calculates the Diagnostic Odds Ratio (DOR)
and its logarithm (logDOR) for each marker as an additional measure of
specificity. Supports parallel execution and optional saving to text or Excel files.
}
\details{
This function iterates through each cluster defined by \code{cluster_column}. For each
cluster, it runs \code{FindMarkers} against all other cells.

If \code{calculate_dor = TRUE}:
\itemize{
\item It calculates \code{DOR = (pct.1 * (1 - pct.2)) / ((1 - pct.1) * pct.2)}.
\item To avoid division by zero or log(0), a small epsilon (1e-9) is added
to \code{pct.1} and \code{pct.2} before calculating DOR and \code{logDOR = log2(DOR)}.
}

Parallel execution (\code{parallel = TRUE}) uses the \code{parallel} package (socket
clusters) for cross-platform compatibility.

Results can be saved as a single TSV file (\code{output_file}) and/or an Excel
file (\code{save_excel = TRUE}, requires \code{WriteXLS} package) with markers for each
cluster on a separate sheet. Sheet names are sanitized and made unique.

Optionally, the final combined marker table can be assigned to the variable
\code{markers_table} in the global environment (\code{assign_to_env = TRUE}).
}
\examples{
\dontrun{
# Requires Seurat, parallel, dplyr (optional), WriteXLS (optional)
# install.packages(c("Seurat", "WriteXLS"))
# library(Seurat)
# library(parallel)
# library(dplyr) # Optional, for potential viewing/manipulation

# --- Create Dummy Data ---
counts <- matrix(rpois(10000, lambda = 1), nrow = 100, ncol = 100)
rownames(counts) <- paste0("Gene", 1:100)
colnames(counts) <- paste0("Cell", 1:100)
seu_obj <- CreateSeuratObject(counts = counts)
seu_obj$seurat_clusters <- factor(sample(0:2, 100, replace = TRUE)) # Factor is important
seu_obj <- NormalizeData(seu_obj, verbose = FALSE)
# --- End Dummy Data ---

# --- Run Sequentially, Calculate DOR, Save TSV, Return Table ---
markers_dor <- find_cluster_markers_with_dor(
  seurat_object = seu_obj,
  cluster_column = "seurat_clusters",
  calculate_dor = TRUE,
  parallel = FALSE,
  output_file = file.path(tempdir(), "markers_with_dor.tsv"),
  save_excel = FALSE,
  assign_to_env = FALSE
)
head(markers_dor)

# --- Run in Parallel, Save Excel, Assign Globally ---
# available_cores <- parallel::detectCores()
# cores_to_use <- if(available_cores > 1) 2 else 1
# find_cluster_markers_with_dor(
#   seurat_object = seu_obj,
#   cluster_column = "seurat_clusters",
#   calculate_dor = TRUE,
#   parallel = TRUE,
#   num_cores = cores_to_use,
#   save_excel = TRUE,
#   excel_file = file.path(tempdir(), "markers_dor_parallel.xlsx"),
#   assign_to_env = TRUE # Will create 'markers_table' globally
# )
# Check if 'markers_table' exists globally
# if(exists("markers_table")) head(markers_table)
# Check if Excel file exists
# list.files(tempdir(), pattern = "\\.xlsx$")
}

}
\seealso{
\code{\link[Seurat]{FindMarkers}}, \code{\link[WriteXLS]{WriteXLS}}, \code{\link[parallel]{makeCluster}}, \code{\link[parallel]{parLapply}}
}
