% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_differential_expression_by_celltype.R
\name{run_differential_expression_by_celltype}
\alias{run_differential_expression_by_celltype}
\title{Run Differential Expression Analysis Per Cell Type Between Two Conditions}
\usage{
run_differential_expression_by_celltype(
  seurat_obj,
  celltype_col = "cell.type.ident",
  condition_col = "disease.ident",
  condition1 = "PAH",
  condition2 = "CTRL",
  output_dir = "./DE_results",
  output_filename = "DE_results",
  test_use = "wilcox",
  min_pct = 0.1,
  logfc_threshold = 0.25,
  only_pos = FALSE,
  return_results = FALSE,
  save_as_excel = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{seurat_obj}{A Seurat object containing single-cell data and metadata.}

\item{celltype_col}{Character string. The name of the metadata column in
\code{seurat_obj@meta.data} that contains the cell type annotations.
Default is \code{"cell.type.ident"}.}

\item{condition_col}{Character string. The name of the metadata column in
\code{seurat_obj@meta.data} that contains the condition labels (e.g., "disease",
"treatment"). Default is \code{"disease.ident"}.}

\item{condition1}{Character string. The label for the first condition (ident.1
in \code{FindMarkers}, the numerator for fold change). Default is \code{"PAH"}.}

\item{condition2}{Character string. The label for the second condition (ident.2
in \code{FindMarkers}, the denominator for fold change). Default is \code{"CTRL"}.}

\item{output_dir}{Character string. The path to the directory where output files
(\code{.txt} files per cell type and optionally a \code{.xlsx} file) will be saved.
The directory will be created if it doesn't exist. Default is \code{"./DE_results"}.}

\item{output_filename}{Character string. The base name for the combined Excel
output file (without the .xlsx extension). Default is \code{"DE_results"}. Ignored
if \code{save_as_excel = FALSE}.}

\item{test_use}{Character string. The statistical test to use in \code{FindMarkers}.
See \code{?Seurat::FindMarkers} for options (e.g., "wilcox", "MAST", "DESeq2").
Default is \code{"wilcox"} (Wilcoxon rank sum test).}

\item{min_pct}{Numeric. Only test genes that are detected in a minimum fraction
of cells in either of the two populations being compared. Passed to \code{FindMarkers}.
Default is \code{0.1}.}

\item{logfc_threshold}{Numeric. Limit testing to genes which show, on average,
at least X-fold difference (log-scale) between the two conditions. Passed to
\code{FindMarkers}. Default is \code{0.25}. Setting to 0 tests all genes meeting \code{min_pct}.}

\item{only_pos}{Logical. If \code{TRUE}, only return genes with positive \code{avg_log2FC}
(i.e., more highly expressed in \code{condition1}). Passed to \code{FindMarkers}.
Default is \code{FALSE}.}

\item{return_results}{Logical. If \code{TRUE}, the function returns a named list
where each element contains the differential expression results (as a data frame)
for a specific cell type. If \code{FALSE} (default), the function returns \code{NULL}
invisibly, primarily relying on side effects (saving files).}

\item{save_as_excel}{Logical. If \code{TRUE} (default), attempts to save a combined
Excel file containing all results using the \code{openxlsx} package (which must be
installed). If \code{FALSE}, only individual \code{.txt} files are saved.}

\item{verbose}{Logical. If \code{TRUE} (default), print progress messages to the
console during execution.}
}
\value{
If \code{return_results} is \code{TRUE}, a named list where names are cell types
and values are data frames containing the DE results from \code{FindMarkers} for that
cell type. Each data frame includes a 'gene' column.
If \code{return_results} is \code{FALSE}, returns \code{invisible(NULL)}.
The function primarily acts via side effects: creating text files for each
cell type's DE results in \code{output_dir}, and optionally creating a combined
Excel file.
}
\description{
Performs differential gene expression (DE) analysis using \code{Seurat::FindMarkers}
for each unique cell type present in a Seurat object. The comparison is made
between two specified conditions (e.g., treatment vs. control, disease vs. healthy)
found within a designated metadata column.
}
\details{
The function iterates through each unique identifier found in the \code{celltype_col}
of the Seurat object's metadata. For each cell type:
\enumerate{
\item It subsets the Seurat object to include only cells of that specific type.
\item It checks if there are cells belonging to both \code{condition1} and \code{condition2}
(as defined in the \code{condition_col}) within the subset. If not, it skips
that cell type with a warning.
\item It sets the identity (\code{Idents}) of the subset to the \code{condition_col}.
\item It runs \code{Seurat::FindMarkers} comparing \code{ident.1 = condition1} against
\code{ident.2 = condition2} using the specified statistical test and thresholds.
Positive \code{avg_log2FC} values indicate higher expression in \code{condition1}.
\item The results (including gene names) for the cell type are saved as a
tab-delimited text file in the \code{output_dir}.
\item Optionally, if \code{save_as_excel = TRUE} and the \code{openxlsx} package is
installed, all results are compiled into a single Excel workbook. This
workbook includes a summary sheet and separate sheets for each cell type's
detailed DE results, with conditional formatting applied to the logFC column.
If \code{openxlsx} is not installed, a message is printed, and only individual
\code{.txt} files are saved.
}
The function can optionally return the results as a named list.
}
\examples{
\dontrun{
# This example requires the Seurat package.
# install.packages("Seurat")
# install.packages("openxlsx") # Optional, for Excel output
# library(Seurat)
# library(dplyr) # For potential data manipulation before/after

# --- Create a dummy Seurat object ---
counts <- matrix(rpois(20000, lambda = 2), nrow = 200, ncol = 100)
rownames(counts) <- paste0("Gene", 1:200)
colnames(counts) <- paste0("Cell", 1:100)
seu <- CreateSeuratObject(counts = counts)

# Add dummy metadata
set.seed(123)
seu$cell.type.ident <- sample(c("Tcell", "Bcell", "Myeloid"), ncol(seu), replace = TRUE)
seu$disease.ident <- sample(c("PAH", "CTRL"), ncol(seu), replace = TRUE)
seu <- NormalizeData(seu, verbose = FALSE)
# --- End Dummy Data ---

# Define output directory (use tempdir for example)
out_dir <- file.path(tempdir(), "DE_Example")

# Run the DE analysis
de_results_list <- run_differential_expression_by_celltype(
 seurat_obj = seu,
 celltype_col = "cell.type.ident",
 condition_col = "disease.ident",
 condition1 = "PAH",
 condition2 = "CTRL",
 output_dir = out_dir,
 output_filename = "PAH_vs_CTRL_DE",
 test_use = "wilcox",
 min_pct = 0.1,
 logfc_threshold = 0.1, # Lower threshold for more results in dummy data
 return_results = TRUE, # Get the results back as a list
 save_as_excel = TRUE, # Try to save Excel file
 verbose = TRUE
)

# Explore results
print(paste("Results saved in:", out_dir))
list.files(out_dir)

# If return_results = TRUE, inspect the list
if (!is.null(de_results_list)) {
 names(de_results_list) # See results for which cell types
 # head(de_results_list$Tcell) # View head of Tcell results
}

# Clean up temporary directory
# unlink(out_dir, recursive = TRUE)
}

}
\seealso{
\code{\link[Seurat]{FindMarkers}}, \code{\link[openxlsx]{createWorkbook}} (if saving Excel)
}
