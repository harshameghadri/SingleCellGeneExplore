% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/plot_average_gene_expression_boxplots_by_celltype.R
\name{Plot_Average_Gene_Expression_BoxPlots_byCellType.2}
\alias{Plot_Average_Gene_Expression_BoxPlots_byCellType.2}
\title{Plot Average Gene Expression Boxplots or Raincloud Plots by Cell Type}
\usage{
Plot_Average_Gene_Expression_BoxPlots_byCellType.2(
  data_list,
  genes_of_interest,
  subject_colors,
  filter_column = "lineage.type",
  filter_values = NULL,
  significance_data = NULL,
  significance_column = "adjusted_p_value.BH",
  significance_thresholds = c(`***` = 0.001, `**` = 0.01, `*` = 0.05),
  plot_title_prefix = "Gene_Expression_by_Cell_Type",
  jitter = TRUE,
  plot_raincloud = FALSE,
  path = NULL,
  save_pdf = TRUE,
  save_png = FALSE,
  view_plot = TRUE,
  plots_per_page = 2,
  x_axis_text_size = 10,
  y_axis_text_size = 10,
  x_axis_angle = 45,
  y_axis_limits = NULL,
  adaptive_y_limits = TRUE,
  outlier_method = "iqr",
  outlier_factor = 1.5,
  percentile_range = c(0.05, 0.95),
  faceted_free_scales = FALSE,
  facet_scaling = "auto",
  respect_manual_limits = TRUE,
  disease_colors = c(CTRL = "dodgerblue", PAH = "firebrick"),
  verbose = FALSE
)
}
\arguments{
\item{data_list}{A named list of tibbles. The names of the list elements are
assumed to represent cell types (any ".APS" suffix will be removed). Each
tibble within the list must contain at least the following columns:
\itemize{
\item \code{gene}: Character vector of gene names.
\item \code{average_expression}: Numeric vector of expression values.
\item \code{disease}: Character or factor vector indicating the condition
(e.g., "CTRL", "PAH"). Used for boxplot fill color.
\item \code{subject}: Character or factor vector indicating the subject ID.
Used for jitter point color when \code{jitter = TRUE}.
}}

\item{genes_of_interest}{A character vector specifying the genes for which
to generate plots. Plots will only be created for genes found in the data.}

\item{subject_colors}{A named character vector where names are subject IDs
(matching the 'subject' column in \code{data_list} tibbles) and values are
valid R color strings (e.g., \code{c("S1" = "red", "S2" = "blue")}). Used to
color jitter points when \code{jitter = TRUE}.}

\item{filter_column}{A character string specifying the column name to use for
filtering cell types. Default is "lineage.type". Can be any column present
in the tibbles (e.g., "lineage.type.2", "cell_category", etc.).}

\item{filter_values}{A character vector specifying which values from the
\code{filter_column} to include in plots. If NULL (default), all cell types
are included. Examples: c("Immune"), c("Myeloid", "Lymphoid"),
c("CD4.T.Cells", "B.Cells").}

\item{significance_data}{A named list of tibbles containing statistical results.
Names should match cell type names (with or without ".APS" suffix). Each
tibble should contain columns: \code{gene} and the column specified in
\code{significance_column}. If NULL (default), no significance stars are added.}

\item{significance_column}{A character string specifying which p-value column
to use for significance testing. Default is "adjusted_p_value.BH".
Alternative: "p_value".}

\item{significance_thresholds}{A named numeric vector specifying p-value
thresholds for significance stars. Default is
\code{c("***" = 0.001, "**" = 0.01, "*" = 0.05)}.}

\item{plot_title_prefix}{A character string used as the prefix for the
output PDF and PNG filenames. Default is "Gene_Expression_by_Cell_Type".}

\item{jitter}{Logical. If \code{TRUE} (default), adds individual data points to the
plots, colored by subject according to \code{subject_colors}.}

\item{plot_raincloud}{Logical. If \code{TRUE}, creates raincloud plots instead of
traditional boxplots. Raincloud plots show violin plots (distribution),
box plots (quartiles), and individual data points. Default is \code{FALSE}.}

\item{path}{Optional. A character string specifying the directory path where
the output plot files should be saved. If \code{NULL} (default), plots are
saved in the current working directory.}

\item{save_pdf}{Logical. If \code{TRUE} (default), saves plots as a PDF file.}

\item{save_png}{Logical. If \code{TRUE}, saves plots as a PNG file. Default is \code{FALSE}.}

\item{view_plot}{Logical or numeric. If \code{TRUE}, displays all plots. If \code{FALSE},
no plots are displayed. If numeric, displays that many plot pages.
Default is \code{TRUE}.}

\item{plots_per_page}{Integer. Number of plots to display per page/panel.
Default is 2. Can be set to any number (e.g., 6 for 6 plots per page).}

\item{x_axis_text_size}{Numeric. Font size for x-axis text. Default is 10.}

\item{y_axis_text_size}{Numeric. Font size for y-axis text. Default is 10.}

\item{x_axis_angle}{Numeric. Angle for x-axis text rotation in degrees.
Default is 45.}

\item{y_axis_limits}{A numeric vector of length 2 specifying custom y-axis
limits c(min, max). If NULL (default), limits are calculated automatically.
When \code{faceted_free_scales = TRUE}, this parameter's behavior depends on
\code{respect_manual_limits}.}

\item{adaptive_y_limits}{Logical. If \code{TRUE} (default), each gene gets its own
optimized Y-axis limits. If \code{FALSE}, uses global limits across all genes.
Ignored when \code{y_axis_limits} is specified or \code{faceted_free_scales = TRUE}.}

\item{outlier_method}{Character. Method for handling outliers when calculating
adaptive Y-limits. Options: "iqr" (default), "percentile", "none".}

\item{outlier_factor}{Numeric. Factor for IQR-based outlier detection.
Default is 1.5. Larger values are more permissive of outliers.}

\item{percentile_range}{Numeric vector of length 2. Percentile range to use
when \code{outlier_method = "percentile"}. Default is c(0.05, 0.95).}

\item{faceted_free_scales}{Logical. If \code{TRUE}, creates faceted plots instead
of individual plots. Allows for flexible Y-axis scaling per gene.
Default is \code{FALSE}.}

\item{facet_scaling}{Character. Controls facet scaling behavior when
\code{faceted_free_scales = TRUE}. Options: "auto" (default), "free_y",
"free_x", "fixed". "auto" intelligently chooses based on expression range
diversity.}

\item{respect_manual_limits}{Logical. When \code{TRUE} (default) and
\code{y_axis_limits} is specified, manual limits override facet free scaling.
When \code{FALSE}, facet free scaling takes precedence over manual limits.}

\item{disease_colors}{A named character vector for disease condition colors.
Default is \code{c("CTRL" = "dodgerblue", "PAH" = "firebrick")}. Names should
match the values in the \code{disease} column of your data.}

\item{verbose}{Logical. If \code{TRUE}, prints detailed progress messages through
all processing stages. Default is \code{FALSE}.}
}
\value{
A list containing:
\itemize{
\item \code{plots}: List of ggplot objects created
\item \code{genes_plotted}: Character vector of genes successfully plotted
\item \code{genes_missing}: Character vector of genes not found in data
\item \code{cell_types_used}: Character vector of cell types included in plots
\item \code{plot_info}: List with plotting parameters used
}
}
\description{
Generates boxplots or raincloud plots comparing the average expression of specified genes
across different cell types. Data is expected in a list of tibbles, where each
list element corresponds to a cell type. Plots are grouped and colored by
a 'disease' condition. Individual data points can be overlaid as jittered points,
colored by subject. Statistical significance can be displayed as stars.
Plots can be generated as individual plots or as faceted plots with flexible
Y-axis scaling. Plots are saved to PDF and/or PNG files and can be displayed
in the R graphics device.
}
\examples{
\dontrun{
# Basic usage with default settings
result <- Plot_Average_Gene_Expression_BoxPlots_byCellType(
  data_list = my_data_list,
  genes_of_interest = c("TP53", "BRCA1"),
  subject_colors = my_subject_colors
)

# Filter by immune lineage with significance stars
result <- Plot_Average_Gene_Expression_BoxPlots_byCellType(
  data_list = my_data_list,
  genes_of_interest = c("TP53", "BRCA1", "CD4", "CD8A"),
  subject_colors = my_subject_colors,
  filter_column = "lineage.type",
  filter_values = "Immune",
  significance_data = my_stats_data,
  verbose = TRUE
)

# Raincloud plots with faceted free scales for genes with different ranges
result <- Plot_Average_Gene_Expression_BoxPlots_byCellType(
  data_list = my_data_list,
  genes_of_interest = c("TEK", "FOXO1", "FOXO3", "FOXF1"),
  subject_colors = my_subject_colors,
  plot_raincloud = TRUE,
  faceted_free_scales = TRUE,
  facet_scaling = "free_y",
  plots_per_page = 4,
  save_png = TRUE
)

# Custom Y-axis limits with adaptive scaling
result <- Plot_Average_Gene_Expression_BoxPlots_byCellType(
  data_list = my_data_list,
  genes_of_interest = c("GENE1", "GENE2"),
  subject_colors = my_subject_colors,
  adaptive_y_limits = TRUE,
  outlier_method = "percentile",
  percentile_range = c(0.1, 0.9)
)
}
}
